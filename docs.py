import os
from aiogram import types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, FSInputFile
from aiogram.filters import StateFilter  # ‚úÖ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç

DOC_PATH = os.path.join(os.path.dirname(__file__), "1.docx")  # –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
DOC_NAME = "1.docx"

docs_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text=DOC_NAME)],
        [KeyboardButton(text="‚¨ÖÔ∏è –í –º–µ–Ω—é")]
    ],
    resize_keyboard=True,
)

def register_docs_handlers(dp, is_authorized, refuse):
    @dp.message(StateFilter('*'), F.text == "üìÅ –î–æ–∫—É–º–µ–Ω—Ç—ã")
    async def docs_menu(message: types.Message, state=None):
        if not is_authorized(message.from_user.id):
            await refuse(message); return

        if not os.path.isfile(DOC_PATH):
            kb = getattr(message.bot, "main_kb", None)
            await message.answer("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=kb)
            return

        await message.answer("–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª:", reply_markup=docs_kb)

    @dp.message(StateFilter('*'), F.text.in_({DOC_NAME, "‚¨ÖÔ∏è –í –º–µ–Ω—é"}))
    async def send_doc(message: types.Message, state=None):
        if not is_authorized(message.from_user.id):
            await refuse(message); return

        if message.text == DOC_NAME:
            try:
                file = FSInputFile(DOC_PATH)
                await message.answer_document(file, caption=f"üìÅ {DOC_NAME}", reply_markup=docs_kb)
            except Exception as e:
                await message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}", reply_markup=docs_kb)
            return

        kb = getattr(message.bot, "main_kb", None)
        await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=kb)
